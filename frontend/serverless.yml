---
service: crossfeed-frontend

frameworkVersion: '3'
useDotenv: true
configValidationMode: error

custom:
  webpack:
    webpackConfig: webpack.lambda.config.js
  customDomain:
    domainName: ${file(env.yml):${self:provider.stage}.DOMAIN, ''}
    basePath: ''
    certificateName: ${file(env.yml):${self:provider.stage}.DOMAIN, ''}
    stage: ${self:provider.stage}
    createRoute53Record: false
  # serverlessIfElse:
  #   - If: '"${file(env.yml):${self:provider.stage}.ENDPOINT_TYPE}" == "REGIONAL"'
  #     Exclude:
  #       - provider.vpcEndpointIds

provider:
  name: aws
  region: ${file(env.yml):${self:provider.stage}.REGION, ''}
  endpointType: ${file(env.yml):${self:provider.stage}.ENDPOINT_TYPE, ''}
  runtime: nodejs16.x
  timeout: 30
  stage: ${opt:stage, 'dev'}
  environment: ${file(env.yml):${self:provider.stage}, ''}
  vpc: ${file(env.yml):${self:provider.stage}-vpc, ''}
  vpcEndpointIds:
    - ${file(env.yml):${self:provider.stage}.VPC_ENDPOINT, ''}
  apiGateway:
    binaryMediaTypes:
      - image/*
      - font/*
    resourcePolicy:
      - Effect: Deny
        Principal: '*'
        Action: 'execute-api:Invoke'
        Resource: 'execute-api:/${self:provider.stage}/*/*'
        Condition:
          StringNotEquals:
            'aws:sourceVpce': ${file(env.yml):${self:provider.stage}.VPC_ENDPOINT, ''}
      - Effect: Allow
        Principal: '*'
        Action: execute-api:Invoke
        Resource: execute-api:/${self:provider.stage}/*/*
  logs:
    restApi: true
  deploymentBucket:
    serverSideEncryption: AES256

functions:
  api:
    handler: scripts/api.handler
    events:
      - http:
          path: /  # this matches the base path
          method: GET
      - http:
          # this matches any path, the token 'any' doesn't mean anything special
          path: /{any+}
          method: GET
    # provisionedConcurrency: 1
  docs:
    handler: scripts/docs.handler
    events:
      - http:
          path: /docs
          method: GET

plugins:
  - serverless-better-credentials
  - serverless-domain-manager
  - serverless-webpack
  # - serverless-plugin-ifelse
